//递归求n的阶乘
int ful(int i)
{
	if (i<=1)
	{
		return 1;
	}
	else			
	return i * ful(i - 1);
}

int main()
{
	int ret = 0;
	int n = 0;
	scanf("%d\n",&n);
	ret = ful(n);
	printf("%d\n", ret);
	return 0;
}

//递归求斐波那契数


//int Fib(int i)
//{
//	if (i<=2)
//	{
//		return 1;
//	}
//	else				
//	return Fib(i - 1) + Fib(i - 2);
//}
int Fib(int i)
{
	/*int x = 0;
	int y = 0;
	int n = 0;
	for (x = 1, y = 1; n+2< i;)
	{
		int z = x + y;
		x = y;
		y = z;
		n++;
	}
	return y;*/
	int a = 1;
	int b = 1;
	int c = 1;
	while (i > 2)
	{
		c = a + b;
		a = b;
		b = c;
		i--;
	}
	return c;
}

int main()
{
	int ret = 0;
	int n = 0;
	scanf("%d\n", &n);
	ret = Fib(n);
	printf("%d\n", ret);
	return 0;
}
