void bubble_sort(int* arr[], int sz)//数组传参是传的数组的首元素地址&arr[0]
{
	int  i = 0;
	int j = 0;
	int tmp = 0;
	
	for (i = 0; i < sz-1; i++)
	{	
		int flag = 1;
		for (j=0;j<sz-i-1;j++)
		{
			if (arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
				flag = 0;
			}		   
		}
		if (flag == 1)
		{
			break;
		}
	}
	
}
//冒泡函数
int main()
{
	int i =0 ;
	int arr[] = {9,8,7,6,5,4,3,2,1,0};
	int sz = sizeof(arr) / sizeof(arr[0]);
	bubble_sort(arr,sz);//冒泡排序
	for (i=0;i<sz;i++)
	{
		printf("%d ",arr[i]);
	}
	return 0;
}


int main()
{
	int arr[] = {1,2,3,4,5,6,7};
	printf("%p\n", arr);
	printf("%p\n", arr + 1);
	printf("%p\n", &arr[0]);	
	printf("%p\n", &arr[0]+1);
	printf("%d\n", *arr);//解引用操作符就能取出地址内的数字
	//arr就是首元素的地址 //例外1、sizeof(arr)-数组名表示整个数组，sizeof(数组名)计算的是整个数组的大小，单位是字节
	//2、&数组名，数组名代表整个数组，&数组名，取出的是整个数组的地址
	printf("%p\n",&arr);
	printf("%p\n", &arr+1);
	return 0;
}
